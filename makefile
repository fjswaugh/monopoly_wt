SHELL := bash

# Name of the final executable, to be put in $(BINDIR)
PRODUCT := a.out

BINDIR :=
INCDIR := src/
SRCDIR := src/
OBJDIR := obj/

CXX := g++
LINKER := g++
INCDIRS := -I $(INCDIR)
CXXFLAGS := -std=c++17 -Wall -Wextra -pedantic
RELEASE_CXX_FLAGS := -O3 -DNDEBUG -flto
LIBS := -lpthread -lwt -lwthttp

# Generate list of directories to put in the $(OBJDIR)
# They must be the same as the directories found in $(SRCDIR)
# The directories must be made before files inside them used.
OBJDIRS := $(shell find $(SRCDIR) -type d)
OBJDIRS := $(OBJDIRS:$(SRCDIR)%=$(OBJDIR)%)

# Generate list of cpp files
SRCFILES := $(shell find $(SRCDIR) -name '*.cpp')
# Create list of .o files from source files
OBJFILES := $(SRCFILES:$(SRCDIR)%.cpp=$(OBJDIR)%.o)
# Here, the same thing is done to get a list of dependency files
DEPFILES := $(SRCFILES:$(SRCDIR)%.cpp=$(OBJDIR)%.d)

# First target is the default - links executable files together
# $^ refers to all prerequisites, $@ to the target of the rule
$(BINDIR)$(PRODUCT): $(OBJFILES)
	mkdir -p $(OBJDIRS)
	$(LINKER) $(CXXFLAGS) $^ $(LIBS) -o $@

# Make a release build
release: CXXFLAGS += $(RELEASE_CXX_FLAGS)
release: clean
release: depends
release: $(BINDIR)$(PRODUCT)

# Clean the project by removing all object files and executable
clean:
	rm -f $(OBJFILES) $(BINDIR)$(PRODUCT) $(DEPFILES)
	rmdir -p --ignore-fail-on-non-empty $(OBJDIRS)

# Remove dependency files and rebuild all dependencies
depends:
	rm -f $(DEPFILES)
	$(MAKE) $(DEPFILES)

# How to build a .o file from a .cpp file
# $< refers to the first prerequisite only
$(OBJDIR)%.o: $(SRCDIR)%.cpp
	$(CXX) $(CXXFLAGS) $(INCDIRS) -c $< -o $@

# How to build .d files
# -MM option says to generate dependencies (though not for, say, <iostream>)
#  sed is then used to change lines like:
#      main.o: src/main.cpp inc/dice.h inc/report.h
#  to lines like:
#      obj/main.d obj/main.o: src/main.cpp inc/dice.h inc/report.h
#  tr is used to remove backslashes and EOL characters generated by GCC
$(OBJDIR)%.d: $(SRCDIR)%.cpp
	mkdir -p $(OBJDIRS)
	$(CXX) $(CXXFLAGS) $(INCDIRS) -MM $< \
	    | tr '\n\r\\' ' ' \
	    | sed -e 's%^%$@ %' -e 's% % $(OBJDIR)%'\
	    > $@

# Pastes in the dependency files here, which read as simple rules
# There can be multiple rules for one target, make will merge prerequisites
# If the files don't exist, make will produce them using the last rule
-include $(DEPFILES)

